//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

//
// SDK Root: /Developer/SDKs/MacOSX-I.sdk
//

#import <AppKit/NSOpenGLView.h>

@class FocusCameraAnimation, GPUTracePostVertexTransformItem, GPUTracePostVertexTransformViewCamera, GPUTraceStorage, NSColor, NSData, NSMutableData;
@protocol DYPPostVertexTransformAttribute, DYPPostVertexTransformModel, DYTextureImage;

__attribute__((visibility("hidden")))
@interface GPUTracePostVertexTransformView : NSOpenGLView
{
    unsigned int _vaos[9];
    unsigned int _buffers[12];
    unsigned int _textures[2];
    struct {
        CDStruct_3624110d solidColor;
        CDStruct_7830a728 luminanceTexture;
        CDStruct_7830a728 colorTexture;
        CDStruct_3624110d postVertexTransformSolid;
        struct {
            unsigned int program;
            int modelViewProjectionMatrix;
            int colorMatrix;
        } postVertexTransformColor;
        struct {
            unsigned int program;
            int modelViewProjectionMatrix;
            int ambientColor;
            int diffuseColor;
            int spotDirection;
        } postVertexTransformDiffuse;
        struct {
            unsigned int program;
            int modelViewMatrix;
            int projectionMatrix;
            int inverseProjectionMatrix;
            int color;
            int normalScale;
        } postVertexTransformDisplace;
        struct {
            unsigned int program;
            unsigned int modelViewProjectionMatrix;
        } postVertexTransformProject;
        CDStruct_03a6da9b postVertexTransformPrimitiveTriangle;
        CDStruct_03a6da9b postVertexTransformPrimitiveLineAndPoint;
        struct {
            unsigned int program;
            int modelViewProjectionMatrix;
            int color;
            int wireframeColor;
            int attachment;
            int showAttachment;
        } postVertexTransformFrustum;
    } _programs;
    unsigned int _modelProgram;
    struct {
        union _GLKMatrix4 projection;
        union _GLKVector3 minPosition;
        union _GLKVector3 maxPosition;
        NSMutableData *positions;
    } _inverseModel;
    struct {
        union _GLKMatrix4 view;
        union _GLKMatrix4 projection;
    } _matrix;
    GPUTracePostVertexTransformViewCamera *_camera;
    FocusCameraAnimation *_focusCameraAnimation;
    BOOL _updateCamera;
    struct {
        struct CGSize size;
    } _displayable;
    struct {
        char modelVertices;
        char modelOutline;
        char modelShadow;
        char modelBox;
        char frustum;
        char arcball;
    } _draw;
    struct {
        NSData *modelVertices;
        NSData *modelIndices;
        id <DYTextureImage> image;
        char staticData;
    } _load;
    BOOL _isDragging;
    double _mouseDownTime;
    union _GLKVector2 _dragDelta;
    BOOL _updateModelnverseProjection;
    BOOL _readyForDisplay;
    NSColor *_selectedPrimitiveColor;
    NSColor *_secondarySelectedPrimitiveColor;
    GPUTraceStorage *_storage;
    GPUTracePostVertexTransformItem *_postVertexTransformItem;
    BOOL _showWireframe;
    BOOL _showAttachment;
    BOOL _showAxes;
    BOOL _allowVertexSelection;
    long long _projectionType;
    double _projectionZMinValue;
    double _zNearValue;
    double _zFarValue;
    double _fovValue;
    unsigned long long _selectedModelPrimitiveIndex;
    unsigned long long _selectedModelPrimitiveVertexIndex;
    unsigned long long _secondarySelectedModelPrimitiveIndex;
    id <DYPPostVertexTransformModel> _model;
    id <DYPPostVertexTransformAttribute> _positionAttribute;
}

@property(retain, nonatomic) id <DYPPostVertexTransformAttribute> positionAttribute; // @synthesize positionAttribute=_positionAttribute;
@property(retain, nonatomic) id <DYPPostVertexTransformModel> model; // @synthesize model=_model;
@property(nonatomic) BOOL allowVertexSelection; // @synthesize allowVertexSelection=_allowVertexSelection;
@property(nonatomic) unsigned long long secondarySelectedModelPrimitiveIndex; // @synthesize secondarySelectedModelPrimitiveIndex=_secondarySelectedModelPrimitiveIndex;
@property(nonatomic) unsigned long long selectedModelPrimitiveVertexIndex; // @synthesize selectedModelPrimitiveVertexIndex=_selectedModelPrimitiveVertexIndex;
@property(nonatomic) unsigned long long selectedModelPrimitiveIndex; // @synthesize selectedModelPrimitiveIndex=_selectedModelPrimitiveIndex;
@property(nonatomic) BOOL showAxes; // @synthesize showAxes=_showAxes;
@property(nonatomic) BOOL showAttachment; // @synthesize showAttachment=_showAttachment;
@property(nonatomic) BOOL showWireframe; // @synthesize showWireframe=_showWireframe;
@property(nonatomic) double fovValue; // @synthesize fovValue=_fovValue;
@property(nonatomic) double zFarValue; // @synthesize zFarValue=_zFarValue;
@property(nonatomic) double zNearValue; // @synthesize zNearValue=_zNearValue;
@property(nonatomic) double projectionZMinValue; // @synthesize projectionZMinValue=_projectionZMinValue;
@property(nonatomic) long long projectionType; // @synthesize projectionType=_projectionType;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)loadViewWithModel:(id)arg1 positionAttribute:(id)arg2 framebufferImage:(id)arg3 storage:(id)arg4 postVertexTransformItem:(id)arg5;
- (void)reshape;
- (void)drawRect:(struct CGRect)arg1;
- (void)scrollWheel:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)focusCameraOnSelectedPrimitive;
- (void)_focusCameraOnSelectedPoint:(unsigned long long)arg1;
- (void)_focusCameraOnSelectedLine:(unsigned long long)arg1;
- (void)_focusCameraOnSelectedTriangle:(unsigned long long)arg1;
- (void)_setCameraTarget:(unsigned long long)arg1;
- (void)saveState;
- (void)makeAppropriateDefaultSelection;
- (BOOL)_pickPrimitiveAtScreenPoint:(struct CGPoint)arg1 screenBounds:(struct CGRect)arg2;
- (union _GLKVector2)_worldToScreenPosition:(union _GLKVector3)arg1 screenBounds:(struct CGRect)arg2 viewProjection:(union _GLKMatrix4)arg3;
- (BOOL)_pickPrimitiveVertexAtScreenPoint:(struct CGPoint)arg1 screenBounds:(struct CGRect)arg2;
- (void)mouseUp:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)resetCamera;
@property(readonly, nonatomic) BOOL hasAttachment;
- (void)_loadTextureDisplayable;
- (void)_loadModelVertexAttributes;
- (void)_setModelAttribute:(unsigned int)arg1 attribute:(id)arg2;
- (void)_setModelAttribute:(unsigned int)arg1 attribute:(id)arg2 vertexOffset:(unsigned long long)arg3;
- (void)_setModelAttribute:(unsigned int)arg1 name:(const char *)arg2;
- (void)_setModelInverseProjection:(union _GLKMatrix4)arg1;
- (unsigned long long)_testTrianglesRayOrigin:(union _GLKVector3)arg1 rayVector:(union _GLKVector3)arg2;
- (unsigned long long)_testLinesRayOrigin:(union _GLKVector3)arg1 rayVector:(union _GLKVector3)arg2;
- (unsigned long long)_testPrimitivePointsRayOrigin:(union _GLKVector3)arg1 rayVector:(union _GLKVector3)arg2;
- (unsigned long long)_testPointsRayOrigin:(union _GLKVector3)arg1 rayVector:(union _GLKVector3)arg2;
- (void)_loadStaticData;
- (void)_loadTextureXOR;
- (void)_loadModels;
- (void)_loadPrograms;
- (void)awakeFromNib;

@end

