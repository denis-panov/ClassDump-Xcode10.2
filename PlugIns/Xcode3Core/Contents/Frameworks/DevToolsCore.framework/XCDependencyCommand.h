//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

//
// SDK Root: /Developer/SDKs/MacOSX-I.sdk
//

#import <DevToolsCore/XCWorkQueueCommand.h>

@class DVTMacroDefinitionTable, DVTSearchPath, NSArray, NSMutableArray, NSMutableDictionary, NSString, PBXTargetBuildContext, XCCommandLineToolSpecification, XCDependencyCommandInvocationRecord, XCDependencyGraph, XCDependencyNode, XCPlatformSpecification, XCSDKPackage;
@protocol DVTMacroExpansion;

@interface XCDependencyCommand : XCWorkQueueCommand
{
    NSString *_identifier;
    XCDependencyGraph *_depGraph;
    PBXTargetBuildContext *_buildContext;
    unsigned int _commandNumber;
    NSMutableArray *_filePathsToRemove;
    unsigned long long _phaseNumber;
    unsigned long long _buildBucketNumber;
    NSMutableArray *_inputNodes;
    NSArray *_discoveredInputNodes;
    NSArray *_discoveredOutputNodes;
    NSMutableArray *_outputNodes;
    XCCommandLineToolSpecification *_toolSpecification;
    NSArray *_ruleInfo;
    NSString *_commandPath;
    NSMutableArray *_arguments;
    NSMutableDictionary *_environment;
    NSString *_architecture;
    NSString *_variant;
    XCSDKPackage *_sdk;
    XCPlatformSpecification *_platform;
    NSArray *_filePathsNotToClean;
    NSMutableArray *_directoriesToCreateIfNeeded;
    NSString *_workingDirPath;
    id _customToolInfoObject;
    CDStruct_7eef4560 _configSignature;
    BOOL _usesProducerCommandTimesInsteadOfModTimes;
    BOOL _shouldUniqueOnOutputFiles;
    BOOL _canRunInParallelWithOtherCommands;
    BOOL _emitEnvVars;
    BOOL _shouldProcessDependencyInfoFile;
    BOOL _shouldIncludeInPrebuild;
    NSMutableArray *_buildMessages;
    NSString *_whyState;
    NSString *_commandLineDisplayString;
    DVTMacroDefinitionTable *_launchPropertyDict;
    NSString *_extraSignatureInfo;
    XCDependencyCommandInvocationRecord *_latestCommandInvocRecord;
    NSString *_execDescription;
    NSArray *_commandLineArgs;
    NSArray *_environAssignments;
    XCDependencyNode *_workingDirNode;
    struct vector<XCDependencyNode *, std::__1::allocator<XCDependencyNode *>> _dirsToCreateIfNeeded;
    NSString *_informationalCommandLineDisplayString;
    DVTSearchPath *_commandLineToolSearchPath;
    NSString<DVTMacroExpansion> *_executionDescription;
    NSString<DVTMacroExpansion> *_progressDescription;
}

@property(copy) NSString<DVTMacroExpansion> *progressDescription; // @synthesize progressDescription=_progressDescription;
@property(copy) NSString<DVTMacroExpansion> *executionDescription; // @synthesize executionDescription=_executionDescription;
@property(copy) DVTSearchPath *commandLineToolSearchPath; // @synthesize commandLineToolSearchPath=_commandLineToolSearchPath;
@property BOOL shouldUniqueOnOutputFiles; // @synthesize shouldUniqueOnOutputFiles=_shouldUniqueOnOutputFiles;
@property BOOL shouldIncludeInPrebuild; // @synthesize shouldIncludeInPrebuild=_shouldIncludeInPrebuild;
@property BOOL shouldProcessDependencyInfoFile; // @synthesize shouldProcessDependencyInfoFile=_shouldProcessDependencyInfoFile;
@property(copy) NSString *informationalCommandLineDisplayString; // @synthesize informationalCommandLineDisplayString=_informationalCommandLineDisplayString;
@property(readonly, nonatomic) XCSDKPackage *sdk; // @synthesize sdk=_sdk;
@property(readonly, nonatomic) XCPlatformSpecification *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *variant; // @synthesize variant=_variant;
@property(readonly, nonatomic) NSString *architecture; // @synthesize architecture=_architecture;
@property BOOL canRunInParallelWithOtherCommands; // @synthesize canRunInParallelWithOtherCommands=_canRunInParallelWithOtherCommands;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)successExitCodes;
- (BOOL)isValid;
- (void)invalidate;
- (id)dependencyGraph;
- (id)dependencyNode;
- (void)setCustomToolInfoObject:(id)arg1;
- (id)customToolInfoObject;
- (void)setLaunchPropertyExpansionDictionary:(id)arg1;
- (id)launchPropertyExpansionDictionary;
- (void)prepareForRunning;
- (BOOL)needsToRun;
- (CDStruct_7eef4560)signature;
- (id)description;
- (id)shortNameForDebugging;
- (id)displayString;
- (id)instantiatedCommandResultsPostprocessor;
- (id)messageFormatForFailingCommandWithNoErrors;
- (CDUnknownBlockType)processDependencyInfoFileIfNecessaryWithCommandInvocationSucceeded:(BOOL)arg1;
- (id)instantiatedCommandOutputParserWithLogSectionRecorder:(id)arg1;
- (id)descriptionForWorkQueueLog;
- (id)subprocessCommandLineForProcessing;
- (void)commandInvocationDidEnd:(id)arg1 successfully:(BOOL)arg2;
- (void)_removeOutputFilesOnFailureForCommandInvocation:(id)arg1;
- (void)commandInvocationWillStart:(id)arg1;
- (id)createStartedCommandInvocationWithParameters:(id)arg1;
@property(readonly) Class commandInvocationClass;
- (id)activityLogSectionForCachedOutputs;
- (BOOL)wasAnyInputNodeCreatedInBuildWithIdentifier:(id)arg1;
- (BOOL)_wasNode:(id)arg1 createdInBuildWithIdentifier:(id)arg2 considerDescendantNodes:(BOOL)arg3;
- (BOOL)hasVirtualOutputNode;
- (CDStruct_7eef4560)configurationSignature;
- (void)_addConfigurationSignatureIngredientsToMD5Context:(struct CC_MD5state_st *)arg1;
- (id)whyState;
- (void)addFilePathToRemove:(id)arg1;
- (id)filePathsToRemove;
- (void)setUsesProducerCommandTimesInsteadOfModTimes:(BOOL)arg1;
- (BOOL)usesProducerCommandTimesInsteadOfModTimes;
- (void)setWorkingDirectoryPath:(id)arg1;
- (id)workingDirectoryPath;
- (void)setExtraSignatureInfo:(id)arg1;
- (id)extraSignatureInfo;
- (void)setEmitEnvVars:(BOOL)arg1;
- (BOOL)emitEnvVars;
- (void)setSDK:(id)arg1;
- (void)setPlatform:(id)arg1;
- (void)setVariant:(id)arg1;
- (void)setArchitecture:(id)arg1;
- (void)addEnvironmentEntriesFromDictionary:(id)arg1;
- (void)addEnvironmentValue:(id)arg1 forKey:(id)arg2;
- (void)setEnvironment:(id)arg1;
- (id)environment;
- (id)workingDirectoryNode;
- (id)environmentAssignments;
- (id)commandLineArguments;
- (id)detailedExecutionDescription;
- (void)addBuildMessage:(id)arg1;
- (void)setLatestCommandInvocationRecord:(id)arg1;
- (id)latestCommandInvocationRecord;
- (unsigned long long)transformArgumentsHavingPrefix:(id)arg1 usingFormatString:(id)arg2;
- (unsigned long long)transformArgumentsHavingPrefix:(id)arg1 inRange:(struct _NSRange)arg2 usingFormatString:(id)arg3;
- (void)replaceArgumentAtIndex:(unsigned long long)arg1 withArgument:(id)arg2;
- (void)removeArgumentAtIndex:(unsigned long long)arg1;
- (id)argumentAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfArguments;
- (void)addArgumentsFromArray:(id)arg1;
- (void)addArguments:(id)arg1;
- (void)addArgument:(id)arg1;
- (void)setArguments:(id)arg1;
- (id)arguments;
- (void)setCommandPath:(id)arg1;
- (id)commandPath;
- (void)setRuleInfo:(id)arg1;
- (id)ruleInfo;
- (unsigned long long)commandNumber;
- (void)setToolSpecification:(id)arg1;
- (id)toolSpecification;
- (void)visitUpstreamCommandsUsingPreorderBlock:(CDUnknownBlockType)arg1 postorderBlock:(CDUnknownBlockType)arg2;
- (id)discoveredOutputNodes;
- (void)setDiscoveredOutputNodes:(id)arg1;
- (void)addOutputNode:(id)arg1;
- (id)outputNodes;
- (id)discoveredInputNodes;
- (void)setDiscoveredInputNodes:(id)arg1;
- (void)addInputNode:(id)arg1;
- (id)inputNodes;
- (void)invalidateConfigurationSignature;
- (void)setBuildBucketNumber:(unsigned long long)arg1;
- (unsigned long long)buildBucketNumber;
- (void)setPhaseNumber:(unsigned long long)arg1;
- (unsigned long long)phaseNumber;
- (id)buildContext;
- (id)macroExpansionScope;
- (id)identifier;
- (id)init;
- (id)initWithNumber:(unsigned int)arg1 identifier:(id)arg2 macroExpansionScope:(id)arg3 inDependencyGraph:(id)arg4;

@end

